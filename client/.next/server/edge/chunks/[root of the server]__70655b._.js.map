{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { betterFetch } from \"@better-fetch/fetch\";\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport type { Session } from \"@/auth\";\n\nconst publicRoutes = [\"/\", \"/sign-in\", \"/sign-up\"];\n\nexport default async function authMiddleware(request: NextRequest) {\n  const pathName = request.nextUrl.pathname;\n\n  // Fetch the session using betterFetch\n  const { data: session } = await betterFetch<Session>(\n    \"/api/auth/get-session\",\n    {\n      baseURL: process.env.BETTER_AUTH_URL,\n      headers: {\n        // Get the cookie from the request\n        cookie: request.headers.get(\"cookie\") || \"\",\n      },\n    },\n  );\n\n  // If user is authenticated\n  if (session) {\n    // Allow access to all routes for authenticated users\n    return NextResponse.next();\n  }\n\n  // If user is not authenticated\n  if (!session) {\n    // Allow unauthenticated users to access only public routes\n    if (publicRoutes.includes(pathName)) {\n      return NextResponse.next();\n    }\n\n    // Redirect unauthenticated users to /sign-in for other routes\n    return NextResponse.redirect(new URL(\"/sign-in\", request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|.*\\\\.png$).*)'],\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AAGA,MAAM,eAAe;IAAC;IAAK;IAAY;CAAW;AAEnC,eAAe,eAAe,OAAoB;IAC/D,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IAEzC,sCAAsC;IACtC,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,2JAAA,CAAA,cAAW,AAAD,EACxC,yBACA;QACE,SAAS,QAAQ,GAAG,CAAC,eAAe;QACpC,SAAS;YACP,kCAAkC;YAClC,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;QAC3C;IACF;IAGF,2BAA2B;IAC3B,IAAI,SAAS;QACX,qDAAqD;QACrD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,+BAA+B;IAC/B,IAAI,CAAC,SAAS;QACZ,2DAA2D;QAC3D,IAAI,aAAa,QAAQ,CAAC,WAAW;YACnC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;QAEA,8DAA8D;QAC9D,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;IAC9D;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAkD;AAC9D"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}