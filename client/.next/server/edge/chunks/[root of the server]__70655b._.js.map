{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { betterFetch } from \"@better-fetch/fetch\";\nimport { NextResponse, type NextRequest } from \"next/server\";\nimport type { Session } from \"@/auth\";\n\nconst authRoutes = [\"/sign-in\", \"/sign-up\"];\nconst passwordRoutes = [\"/reset-password\", \"/forgot-password\"];\nconst adminRoutes = [\"/admin\"];\n\nexport default async function authMiddleware(request: NextRequest) {\n  const pathName = request.nextUrl.pathname;\n  const isAuthRoute = authRoutes.includes(pathName);\n  const isPasswordRoute = passwordRoutes.includes(pathName);\n  const isAdminRoute = adminRoutes.includes(pathName);\n\n  const { data: session } = await betterFetch<Session>(\n    \"/api/auth/get-session\",\n    {\n      baseURL: process.env.BETTER_AUTH_URL,\n      headers: {\n        //get the cookie from the request\n        cookie: request.headers.get(\"cookie\") || \"\",\n      },\n    },\n  );\n\n  if (!session) {\n    if (isAuthRoute || isPasswordRoute) {\n      return NextResponse.next();\n    }\n    return NextResponse.redirect(new URL(\"/\", request.url));\n  }\n\n  if (isAuthRoute || isPasswordRoute) {\n    return NextResponse.redirect(new URL(\"/\", request.url));\n  }\n\n  if (isAdminRoute && session.user.role !== \"admin\") {\n    return NextResponse.redirect(new URL(\"/\", request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|.*\\\\.png$).*)'],\n};"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AAGA,MAAM,aAAa;IAAC;IAAY;CAAW;AAC3C,MAAM,iBAAiB;IAAC;IAAmB;CAAmB;AAC9D,MAAM,cAAc;IAAC;CAAS;AAEf,eAAe,eAAe,OAAoB;IAC/D,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IACzC,MAAM,cAAc,WAAW,QAAQ,CAAC;IACxC,MAAM,kBAAkB,eAAe,QAAQ,CAAC;IAChD,MAAM,eAAe,YAAY,QAAQ,CAAC;IAE1C,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,2JAAA,CAAA,cAAW,AAAD,EACxC,yBACA;QACE,SAAS,QAAQ,GAAG,CAAC,eAAe;QACpC,SAAS;YACP,iCAAiC;YACjC,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;QAC3C;IACF;IAGF,IAAI,CAAC,SAAS;QACZ,IAAI,eAAe,iBAAiB;YAClC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;QACA,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,IAAI,eAAe,iBAAiB;QAClC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,IAAI,gBAAgB,QAAQ,IAAI,CAAC,IAAI,KAAK,SAAS;QACjD,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAkD;AAC9D"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}