{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst prisma = globalThis.prismaGlobal ?? prismaClientSingleton();\n\nexport default prisma;\n\n// Ensure the prisma instance is reused across hot reloads in development\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAMA,MAAM,SAAS,WAAW,YAAY,IAAI;uCAE3B;AAEf,yEAAyE;AACzE,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/auth.ts"],"sourcesContent":["import { betterAuth, BetterAuthOptions } from \"better-auth\";\nimport { prismaAdapter } from \"better-auth/adapters/prisma\";\nimport prisma from \"@/lib/prisma\";\nimport { openAPI } from \"better-auth/plugins\";\nimport { admin } from \"better-auth/plugins\";\n\nexport const auth = betterAuth({\n  database: prismaAdapter(prisma, {\n    provider: \"mongodb\",\n  }),\n  session: {\n    expiresIn: 60 * 60 * 24 * 7, // 7 days\n    updateAge: 60 * 60 * 24, // 1 day (every 1 day the session expiration is updated)\n    cookieCache: {\n      enabled: true,\n      maxAge: 5 * 60, // Cache duration in seconds\n    },\n  },\n  user: {\n    additionalFields: {\n      premium: {\n        type: \"boolean\",\n        required: false,\n      },\n    },\n    changeEmail: {\n      enabled: false, // Disable email change functionality\n    },\n  },\n  socialProviders: {\n    github: {\n      clientId: process.env.GITHUB_CLIENT_ID as string,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET as string,\n    },\n  },\n  plugins: [\n    openAPI(),\n    admin({\n      impersonationSessionDuration: 60 * 60 * 24 * 7, // 7 days\n    }),\n  ],\n  emailAndPassword: {\n    enabled: true, // Enable login with email and password\n    requireEmailVerification: false, // Disable email verification requirement\n  },\n  emailVerification: {\n    sendOnSignUp: false, // Disable sending email verification on sign-up\n    autoSignInAfterVerification: false, // No automatic sign-in after verification\n\n  },\n} satisfies BetterAuthOptions);\n\nexport type Session = typeof auth.$Infer.Session;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;AAGO,MAAM,OAAO,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE;IAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD,EAAE,+GAAA,CAAA,UAAM,EAAE;QAC9B,UAAU;IACZ;IACA,SAAS;QACP,WAAW,KAAK,KAAK,KAAK;QAC1B,WAAW,KAAK,KAAK;QACrB,aAAa;YACX,SAAS;YACT,QAAQ,IAAI;QACd;IACF;IACA,MAAM;QACJ,kBAAkB;YAChB,SAAS;gBACP,MAAM;gBACN,UAAU;YACZ;QACF;QACA,aAAa;YACX,SAAS;QACX;IACF;IACA,iBAAiB;QACf,QAAQ;YACN,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;IACF;IACA,SAAS;QACP,CAAA,GAAA,mJAAA,CAAA,UAAO,AAAD;QACN,CAAA,GAAA,mJAAA,CAAA,QAAK,AAAD,EAAE;YACJ,8BAA8B,KAAK,KAAK,KAAK;QAC/C;KACD;IACD,kBAAkB;QAChB,SAAS;QACT,0BAA0B;IAC5B;IACA,mBAAmB;QACjB,cAAc;QACd,6BAA6B;IAE/B;AACF"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/app/api/auth/%5B...all%5D/route.ts"],"sourcesContent":["import { auth } from \"@/auth\";\nimport { toNextJsHandler } from \"better-auth/next-js\";\n\nexport const { POST, GET } = toNextJsHandler(auth);"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,sJAAA,CAAA,kBAAe,AAAD,EAAE,sGAAA,CAAA,OAAI"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}