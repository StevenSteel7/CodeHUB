{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_e531dabc.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_mono_68a01160.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,6JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,6JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,6JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/components/providers/theme-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yEACA"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/components/providers/theme-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qDACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/context/sessionContext.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/sessionContext.tsx <module evaluation>\",\n    \"SessionProvider\",\n);\nexport const useSession = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSession() from the server but useSession is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/sessionContext.tsx <module evaluation>\",\n    \"useSession\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,4DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4DACA"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/context/sessionContext.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SessionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SessionProvider() from the server but SessionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/sessionContext.tsx\",\n    \"SessionProvider\",\n);\nexport const useSession = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSession() from the server but useSession is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/sessionContext.tsx\",\n    \"useSession\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wCACA"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst prisma = globalThis.prismaGlobal ?? prismaClientSingleton();\n\nexport default prisma;\n\n// Ensure the prisma instance is reused across hot reloads in development\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAMA,MAAM,SAAS,WAAW,YAAY,IAAI;uCAE3B;AAEf,yEAAyE;AACzE,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/auth.ts"],"sourcesContent":["import { betterAuth, BetterAuthOptions } from \"better-auth\";\nimport { prismaAdapter } from \"better-auth/adapters/prisma\";\nimport prisma from \"@/lib/prisma\";\nimport { openAPI } from \"better-auth/plugins\";\nimport { admin } from \"better-auth/plugins\";\n\nexport const auth = betterAuth({\n  database: prismaAdapter(prisma, {\n    provider: \"mongodb\",\n  }),\n  session: {\n    expiresIn: 60 * 60 * 24 * 7 , // 7 days\n    updateAge: 60 * 60 * 24, // 1 day (every 1 day the session expiration is updated)\n    cookieCache: {\n      enabled: true,\n      maxAge: 5 * 60, // Cache duration in seconds\n    },\n  },\n  user: {\n    additionalFields: {\n      premium: {\n        type: \"boolean\",\n        required: false,\n      },\n    },\n    changeEmail: {\n      enabled: false, // Disable email change functionality\n    },\n  },\n  socialProviders: {\n    github: {\n      clientId: process.env.GITHUB_CLIENT_ID as string,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET as string,\n    },\n  },\n  plugins: [\n    openAPI(),\n    admin({\n      impersonationSessionDuration: 60 * 60 * 24 * 7, // 7 days\n    }),\n  ],\n  emailAndPassword: {\n    enabled: true, // Enable login with email and password\n    requireEmailVerification: false, // Disable email verification requirement\n  },\n  emailVerification: {\n    sendOnSignUp: false, // Disable sending email verification on sign-up\n    autoSignInAfterVerification: false, // No automatic sign-in after verification\n\n  },\n} satisfies BetterAuthOptions);\n\nexport type Session = typeof auth.$Infer.Session;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;AAGO,MAAM,OAAO,CAAA,GAAA,+IAAA,CAAA,aAAU,AAAD,EAAE;IAC7B,UAAU,CAAA,GAAA,4JAAA,CAAA,gBAAa,AAAD,EAAE,6GAAA,CAAA,UAAM,EAAE;QAC9B,UAAU;IACZ;IACA,SAAS;QACP,WAAW,KAAK,KAAK,KAAK;QAC1B,WAAW,KAAK,KAAK;QACrB,aAAa;YACX,SAAS;YACT,QAAQ,IAAI;QACd;IACF;IACA,MAAM;QACJ,kBAAkB;YAChB,SAAS;gBACP,MAAM;gBACN,UAAU;YACZ;QACF;QACA,aAAa;YACX,SAAS;QACX;IACF;IACA,iBAAiB;QACf,QAAQ;YACN,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;IACF;IACA,SAAS;QACP,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD;QACN,CAAA,GAAA,iJAAA,CAAA,QAAK,AAAD,EAAE;YACJ,8BAA8B,KAAK,KAAK,KAAK;QAC/C;KACD;IACD,kBAAkB;QAChB,SAAS;QACT,0BAA0B;IAC5B;IACA,mBAAmB;QACjB,cAAc;QACd,6BAA6B;IAE/B;AACF"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/components/providers/modal-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalProvider() from the server but ModalProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/modal-provider.tsx <module evaluation>\",\n    \"ModalProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yEACA"}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/components/providers/modal-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalProvider() from the server but ModalProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/modal-provider.tsx\",\n    \"ModalProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qDACA"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ThemeProvider } from \"@/components/providers/theme-provider\";\n// for auth\nimport { SessionProvider } from \"@/context/sessionContext\";\nimport { auth } from \"@/auth\";\nimport { headers } from \"next/headers\";\nimport { ModalProvider } from \"@/components/providers/modal-provider\";\n\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"CodeHUB\",\n  description: \"Generated by create next app\",\n  icons: {\n    icon : [\n      {\n      media : \"(prefers-color-scheme :light)\",\n      url : \"/logo.svg\",\n      href : \"/logo.svg\",\n\n      }\n      ,\n      {\n        media : \"(prefers-color-scheme :dark)\",\n        url : \"/logo.svg\",\n        href : \"/logo.svg\",\n        }\n    ]\n  }\n};\n\n\n\n\n            /* we made this async for session await */\nexport default async function RootLayout({children,}: Readonly<{ children: React.ReactNode;}>) {\n\n\n    const session = await auth.api.getSession({\n      headers: await headers(),\n    });\n  \n  return (\n\n\n    <html lang=\"en\" suppressHydrationWarning>\n        <head />\n        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"system\"\n            enableSystem\n            disableTransitionOnChange\n          >\n          <SessionProvider initialSession={session}>\n          <ModalProvider/>\n            {children}\n\n          </SessionProvider>\n          </ThemeProvider>\n        </body>\n      </html>\n    \n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA,WAAW;AACX;AACA;AACA;AACA;;;;;;;;;;AAaO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,OAAO;QACL,MAAO;YACL;gBACA,OAAQ;gBACR,KAAM;gBACN,MAAO;YAEP;YAEA;gBACE,OAAQ;gBACR,KAAM;gBACN,MAAO;YACP;SACH;IACH;AACF;AAMe,eAAe,WAAW,EAAC,QAAQ,EAA2C;IAGzF,MAAM,UAAU,MAAM,oGAAA,CAAA,OAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QACxC,SAAS,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACvB;IAEF,qBAGE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACpC,8OAAC;;;;;0BACD,8OAAC;gBAAK,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;0BACxE,cAAA,8OAAC,6IAAA,CAAA,gBAAa;oBACZ,WAAU;oBACV,cAAa;oBACb,YAAY;oBACZ,yBAAyB;8BAE3B,cAAA,8OAAC,0HAAA,CAAA,kBAAe;wBAAC,gBAAgB;;0CACjC,8OAAC,6IAAA,CAAA,gBAAa;;;;;4BACX;;;;;;;;;;;;;;;;;;;;;;;AAQb"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}