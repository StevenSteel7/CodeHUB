{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/components/providers/theme-provider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAC6C;IAChD,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soggs/OneDrive/Documents/Desktop/codehub/client/context/sessionContext.tsx"],"sourcesContent":["'use client'; // Mark as client-side for use in Client Components\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\n\r\n\r\n// make it null safe:\r\ninterface SessionContextType {\r\n  session: any ;\r\n  setSession: React.Dispatch<any>;\r\n}\r\n\r\nconst SessionContext = createContext<SessionContextType | null>(null);\r\n\r\nexport const SessionProvider = ({ children, initialSession }: { children: React.ReactNode; initialSession: any }) => {\r\n  const [session, setSession] = useState(initialSession);\r\n\r\n  useEffect(() => {\r\n    \r\n    if (initialSession) {\r\n      setSession(initialSession);\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <SessionContext.Provider value={{ session, setSession }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSession = () => useContext(SessionContext);\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA,cAAc,mDAAmD;;;AAYjE,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA6B;AAEzD,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAsD;IAC9G,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QAER,IAAI,gBAAgB;YAClB,WAAW;QACb;IAEF,GAAG,EAAE;IAML,qBACE,8OAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;YAAS;QAAW;kBACnD;;;;;;AAGP;AAEO,MAAM,aAAa,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}